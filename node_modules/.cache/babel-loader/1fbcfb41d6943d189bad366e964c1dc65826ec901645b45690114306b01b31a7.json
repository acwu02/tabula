{"ast":null,"code":"const express=require('express');const{Pool}=require('pg');const path=require('path');const app=express();const dirname=process.cwd();const publicPath=path.join(dirname,\"static\");app.use('/css',express.static(path.join(publicPath,'css')));app.use('/js',express.static(path.join(publicPath,'js')));app.use('/static/js',express.static(path.join(__dirname,'build')));app.get('/',(req,res)=>{res.sendFile(path.join(publicPath,'index.html'));});const pool=new Pool({user:'postgres',host:'localhost',database:'test_database',password:'password',port:5432});// Start the server\nconst PORT=process.env.PORT||3000;app.listen(PORT,()=>{console.log(\"Server running on port \".concat(PORT));});","map":{"version":3,"names":["express","require","Pool","path","app","dirname","process","cwd","publicPath","join","use","static","__dirname","get","req","res","sendFile","pool","user","host","database","password","port","PORT","env","listen","console","log","concat"],"sources":["/Users/andrewwu/Desktop/projects/tabula/src/index.js"],"sourcesContent":["const express = require('express');\nconst { Pool } = require('pg');\nconst path = require('path');\n\nconst app = express();\nconst dirname = process.cwd();\nconst publicPath = path.join(dirname, \"static\");\n\napp.use('/css', express.static(path.join(publicPath, 'css')));\napp.use('/js', express.static(path.join(publicPath, 'js')));\n\napp.use('/static/js', express.static(path.join(__dirname, 'build')));\n\napp.get('/', (req, res) => {\n  res.sendFile(path.join(publicPath, 'index.html'));\n});\n\nconst pool = new Pool({\n  user: 'postgres',\n  host: 'localhost',\n  database: 'test_database',\n  password: 'password',\n  port: 5432,\n});\n\n// Start the server\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAAC,SAAS,CAAC,CAClC,KAAM,CAAEC,IAAK,CAAC,CAAGD,OAAO,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAE,IAAI,CAAGF,OAAO,CAAC,MAAM,CAAC,CAE5B,KAAM,CAAAG,GAAG,CAAGJ,OAAO,CAAC,CAAC,CACrB,KAAM,CAAAK,OAAO,CAAGC,OAAO,CAACC,GAAG,CAAC,CAAC,CAC7B,KAAM,CAAAC,UAAU,CAAGL,IAAI,CAACM,IAAI,CAACJ,OAAO,CAAE,QAAQ,CAAC,CAE/CD,GAAG,CAACM,GAAG,CAAC,MAAM,CAAEV,OAAO,CAACW,MAAM,CAACR,IAAI,CAACM,IAAI,CAACD,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAC7DJ,GAAG,CAACM,GAAG,CAAC,KAAK,CAAEV,OAAO,CAACW,MAAM,CAACR,IAAI,CAACM,IAAI,CAACD,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,CAE3DJ,GAAG,CAACM,GAAG,CAAC,YAAY,CAAEV,OAAO,CAACW,MAAM,CAACR,IAAI,CAACM,IAAI,CAACG,SAAS,CAAE,OAAO,CAAC,CAAC,CAAC,CAEpER,GAAG,CAACS,GAAG,CAAC,GAAG,CAAE,CAACC,GAAG,CAAEC,GAAG,GAAK,CACzBA,GAAG,CAACC,QAAQ,CAACb,IAAI,CAACM,IAAI,CAACD,UAAU,CAAE,YAAY,CAAC,CAAC,CACnD,CAAC,CAAC,CAEF,KAAM,CAAAS,IAAI,CAAG,GAAI,CAAAf,IAAI,CAAC,CACpBgB,IAAI,CAAE,UAAU,CAChBC,IAAI,CAAE,WAAW,CACjBC,QAAQ,CAAE,eAAe,CACzBC,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAE,IACR,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,IAAI,CAAGjB,OAAO,CAACkB,GAAG,CAACD,IAAI,EAAI,IAAI,CACrCnB,GAAG,CAACqB,MAAM,CAACF,IAAI,CAAE,IAAM,CACrBG,OAAO,CAACC,GAAG,2BAAAC,MAAA,CAA2BL,IAAI,CAAE,CAAC,CAC/C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}